@page "/addequipment"

@inject IAddEquipmentUseCase AddEquipmentUseCase
@inject NavigationManager NavigationManager

<h3>Ajouter un équipement</h3>
<br/>
@if (this.equipment != null)
{
    <EditForm Model="equipment" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator/>
        <ValidationSummary/>

        <div class="form-group">
            <label for="serialNo">No Série</label>
            <InputText id="serialNo" @bind-Value="equipment.SerialNo" class="form-control"/>
        </div>

        <div class="form-group">
            <label for="name">Nom</label>
            <InputText id="name" @bind-Value="equipment.EquipmentName" class="form-control"/>
        </div>

        <div class="form-group">
            <label for="marque">Marqué</label>
            <InputText id="marque" @bind-Value="equipment.Marque" class="form-control"/>
        </div>

        <div class="form-group">
            <label for="model">Model</label>
            <InputText id="model" @bind-Value="equipment.Model" class="form-control"/>
        </div>
        <br/>
        <button type="submit" class="btn btn-primary">Enregistrer</button>

    </EditForm>
}

@code {
    private Equipment? equipment;

    protected override void OnInitialized()
    {
        this.equipment = new Equipment();
    }

    private async Task OnValidSubmit()
    {
        if (this.equipment != null)
        {
            await AddEquipmentUseCase.ExecuteAsync(this.equipment);
            NavigationManager.NavigateTo("/equipments");
        }
    }

}